<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="6" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="34737" started-at="2018-09-03T22:53:28Z" finished-at="2018-09-03T22:54:03Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="34737" started-at="2018-09-03T22:53:28Z" finished-at="2018-09-03T22:54:03Z">
      <class name="io.branch.tests.BranchTest">
        <test-method status="PASS" signature="setUpTest()[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="setUpTest" is-config="true" duration-ms="90" started-at="2018-09-03T22:53:28Z" finished-at="2018-09-03T22:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="setUp" is-config="true" duration-ms="1789" started-at="2018-09-03T22:53:28Z" finished-at="2018-09-03T22:53:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2018-09-03T22:53:30Z" finished-at="2018-09-03T22:53:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyAllEmpWithSumOther()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyAllEmpWithSumOther()[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyAllEmpWithSumOther" duration-ms="24615" started-at="2018-09-03T22:53:30Z" finished-at="2018-09-03T22:53:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[All tab employees count did not match with sum of other tabs expected [131] but found [126]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: All tab employees count did not match with sum of other tabs expected [131] but found [126]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at io.branch.tests.BranchTest.verifyAllEmpWithSumOther(BranchTest.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllEmpWithSumOther -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="1300" started-at="2018-09-03T22:53:55Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllEmpWithSumOther status=FAILURE method=BranchTest.verifyAllEmpWithSumOther()[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyAllEmpDeptWithOther()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAllEmpDeptWithOther()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyAllEmpDeptWithOther" duration-ms="4" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllEmpDeptWithOther -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllEmpDeptWithOther status=SUCCESS method=BranchTest.verifyAllEmpDeptWithOther()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyAllEmpNameWithOther()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAllEmpNameWithOther()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyAllEmpNameWithOther" duration-ms="2" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllEmpNameWithOther -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllEmpNameWithOther status=SUCCESS method=BranchTest.verifyAllEmpNameWithOther()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="verifyAllTeamSortedByName()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyAllTeamSortedByName" duration-ms="2327" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Team name on all team page is not sorted by name expected [JUAN ANDRADE] but found [JUD DAGNALL]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Team name on all team page is not sorted by name expected [JUAN ANDRADE] but found [JUD DAGNALL]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at io.branch.tests.BranchTest.verifyAllTeamSortedByName(BranchTest.java:111)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllTeamSortedByName -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-03T22:53:56Z" finished-at="2018-09-03T22:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyAllTeamSortedByName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="1291" started-at="2018-09-03T22:53:58Z" finished-at="2018-09-03T22:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllTeamSortedByName status=FAILURE method=BranchTest.verifyAllTeamSortedByName()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-03T22:54:00Z" finished-at="2018-09-03T22:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyDeptName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyDeptName()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyDeptName" duration-ms="2" started-at="2018-09-03T22:54:00Z" finished-at="2018-09-03T22:54:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Partner Growth] but found [Partner growth]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Partner Growth] but found [Partner growth]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at io.branch.tests.BranchTest.verifyDeptName(BranchTest.java:163)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeptName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="1335" started-at="2018-09-03T22:54:00Z" finished-at="2018-09-03T22:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeptName status=FAILURE method=BranchTest.verifyDeptName()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-03T22:54:01Z" finished-at="2018-09-03T22:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.branch.tests.BranchTest.verifyTeamInfoBlockText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyTeamInfoBlockText()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a]" name="verifyTeamInfoBlockText" duration-ms="1087" started-at="2018-09-03T22:54:01Z" finished-at="2018-09-03T22:54:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Employee don't have hover information expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Employee don't have hover information expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at io.branch.tests.BranchTest.verifyTeamInfoBlockText(BranchTest.java:124)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTeamInfoBlockText -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDown" is-config="true" duration-ms="942" started-at="2018-09-03T22:54:02Z" finished-at="2018-09-03T22:54:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTeamInfoBlockText status=FAILURE method=BranchTest.verifyTeamInfoBlockText()[pri:1, instance:io.branch.tests.BranchTest@54dcfa5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDownTest()[pri:0, instance:io.branch.tests.BranchTest@54dcfa5a]" name="tearDownTest" is-config="true" duration-ms="429" started-at="2018-09-03T22:54:03Z" finished-at="2018-09-03T22:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- io.branch.tests.BranchTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
